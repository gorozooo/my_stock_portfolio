"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.
"""

from pathlib import Path

# === パス基点 ===
BASE_DIR = Path(__file__).resolve().parent.parent

# === 基本設定 ===
# ※ 本番では環境変数で管理しましょう（開発中はこのままでOK）
SECRET_KEY = 'django-insecure-(f8%22e=p67$pa(7pd!%z3p7f$6w8z)_%o7lgti6i#8pi_%(59'
#DEBUG = False
DEBUG = True

# 開発中: 空でOK / 本番(ConoHa等): ドメイン or IP を追加
ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "gorozooo.com",
    "www.gorozooo.com",
    "192.168.1.16",
]

# ★ CSRF: 本番ドメインを信頼（HTTPSでのHTMX/POST対策）
CSRF_TRUSTED_ORIGINS = [
    "https://gorozooo.com",
    "https://www.gorozooo.com",
]

# === アプリケーション ===
INSTALLED_APPS = [
    # Django標準
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 追加
    'django_htmx',
    'django.contrib.humanize',
    "django_crontab",

    # 自作アプリ
    'portfolio',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # ★ 追加: request.htmx や htmx の便利フラグを付与
    'django_htmx.middleware.HtmxMiddleware',
]

ROOT_URLCONF = 'config.urls'

# === テンプレート ===
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # ← ここがポイント：プロジェクト直下の templates/ を読む
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # デバッグやrequestなどの共通コンテキスト
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# === データベース（開発: SQLite）===
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# === パスワードバリデータ ===
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# === i18n/L10n ===
# ← ここがポイント：日本語・日本時間に変更
LANGUAGE_CODE = 'ja'
TIME_ZONE = 'Asia/Tokyo'
USE_I18N = True
USE_TZ = True  # DBはUTCで保存、表示はAsia/Tokyo

# === Static（CSS/JS/画像）===
STATIC_URL = 'static/'
# 集約先フォルダ
STATIC_ROOT = BASE_DIR / 'staticfiles'
# ← ここがポイント：プロジェクト直下の static/ を読む
STATICFILES_DIRS = [BASE_DIR / 'static']

# 既定の主キー
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ログイン/ログアウト
LOGIN_URL = "/accounts/login/"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# ★ 銘柄名の上書き（yfinanceが英名になるケースの対策）
TSE_NAME_OVERRIDES = {
    "167A": "リョーサン菱洋ホールディングス",
    "285A": "キオクシアホールディングス",
    "186A": "アストロスケールホールディングス",
    # 追加したいコードがあればここに並べる
}

LINE_CHANNEL_ACCESS_TOKEN = "30VUdBGhHtUQJ9qdPXuPOHII3qCCWjZSGFovkg4wyR/OuhjAjGh4qHFCrYj8vnVKZRt+COfvBQhGk/c07PdcH/6OOjEKX1VdsedZIyFqje7KwikBMJxxx7vn1z2XILd+WRl+M0ZlzBuBlizojyPHQwdB04t89/1O/w1cDnyilFU="
LINE_CHANNEL_SECRET = "dc5bc53afed89fae739f8e0388003fd7"


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = "coco.louis67@gmail.com"  # ← あなたのGmail
EMAIL_HOST_PASSWORD = "pmcvdzpjpdndvdhj"   # ← この16桁パス（スペースなし）

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
ADMIN_EMAIL = "coco.louis67@gmail.com"     # ← 送信先も自分でOK


# セクター指標マッピング（最初は主要いくつかでOK。あとで拡充）
ADVISOR_SECTOR_SYMBOLS = {
    "情報・通信": "1306.T",   # 例: TOPIX ETFの代用
    "電気機器":   "6981.T",   # 代表銘柄サンプル
    "銀行":       "8316.T",
    # ...必要に応じて追加（33業種を目標）
}
ADVISOR_SECTOR_LOOKBACK_DAYS = 90